///////////////////////////////////////////////////////////////////////////
//	Archivo   : Manager.cpp
//  Namespace : CapaIndices
////////////////////////////////////////////////////////////////////////////
//	75.06 Organizacion de Datos
//	Trabajo practico: Framework de Persistencia
////////////////////////////////////////////////////////////////////////////
//	Descripcion
//		Implementacion de las clase abstracta Manager.
///////////////////////////////////////////////////////////////////////////
//	Integrantes
//		- Alvarez Fantone, Nicolas;
//      - Caravatti, Estefania;
//		- Garcia Cabrera, Manuel;
//      - Grisolia, Nahuel;
//		- Pisaturo, Damian;
//		- Rodriguez, Maria Laura.
///////////////////////////////////////////////////////////////////////////

#include "Manager.h"

///////////////////////////////////////////////////////////////////////////
// Clase
//------------------------------------------------------------------------
// Nombre: Manager
//			(Abstracta. Define el comportamiento y la interfaz de todas
//			las clases Manager).
///////////////////////////////////////////////////////////////////////////
	
	///////////////////////////////////////////////////////////////////////
	// Constructor/Destructor
	///////////////////////////////////////////////////////////////////////

		Manager::Manager(unsigned int tamanioBloque, string nombreArchivo)
		{
			this->tamanioBloque = tamanioBloque;
			this->nombreArchivo = nombreArchivo;
		}
		
		Manager::~Manager()
		{ }
	
	///////////////////////////////////////////////////////////////////////
	// Metodo protegido
	///////////////////////////////////////////////////////////////////////
		ComuDatos* Manager::instanciarPipe()
		{
			string path= RUTA_CAPA_FISICA;
			path += NOMBRE_CAPA_FISICA;
			
			return new ComuDatos(path);
		}
